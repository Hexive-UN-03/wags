{
    "fastqc" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.err"
    },
    "fastqs_to_ubam" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.err"
    },
    "sam_to_fastq_and_bwa_mem" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "merge_bam_alignment" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "mark_duplicates" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "sort_and_fix_tags" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "base_recalibrator" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "gather_bqsr_reports" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "apply_bqsr" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "gather_bam_files" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "coverage_depth_and_flagstat" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "haplotype_caller" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "merge_gvcfs" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "genotype_gvcfs" :
    {
        "output" : ".logs/{rule}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "fltr_make_sites_only" :
    {
        "output" : ".logs/{rule}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "sites_only_gather_vcf" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "indels_var_recal" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "snps_var_recal" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "apply_recal" :
    {
        "output" : ".logs/{rule}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.hc_interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "final_gather_vcfs" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "collect_metrics_on_vcf" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "vep_final_vcf" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "select_common_vars" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "select_variants_to_table" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "bgzip_and_tabix" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "final_output" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    }
}
