{
    "fastqs_to_ubam" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.err"
    },
    "mark_adapters" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.err"
    },
    "bwa_index" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "sam_to_fastq_and_bwa_mem" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "merge_bam_alignment" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "mark_duplicates" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "sort_and_fix_tags" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "base_recalibrator" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "gather_bqsr_reports" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "apply_bqsr" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "gather_bam_files" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "bam_to_cram" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "scatter_intervals" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "split_intervals" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "haplotype_caller" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/00{wildcards.split}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/00{wildcards.split}/{wildcards.ref}/%j.{rule}.err"
    },
    "merge_gvcfs" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.ref}/%j.{rule}.err"
    },
    "post_base_recalibrator" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.interval}/%j.{rule}.err"
    },
    "post_gather_bqsr_reports" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "download_gvcfs" :
    {
        "output" : ".logs/{rule}/{wildcards.breed}/{wildcards.sample}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.breed}/{wildcards.sample}/%j.{rule}.err"
    },
    "import_gvcfs" :
    {
        "output" : ".logs/{rule}/00{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/00{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "genotype_gvcfs" :
    {
        "output" : ".logs/{rule}/00{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/00{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "fltr_make_sites_only" :
    {
        "output" : ".logs/{rule}/00{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/00{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "sites_only_gather_vcf" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "indels_var_recal" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "snps_var_recal" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "apply_recal" :
    {
        "output" : ".logs/{rule}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "final_gather_vcfs" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "vep_by_interval" :
    {
        "output" : ".logs/{rule}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.interval}/{wildcards.ref}/%j.{rule}.err"
    },
    "final_gather_veps" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "collect_metrics_on_vcf" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "select_common_vars" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "select_variants_to_table" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "bgzip_and_tabix" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "final_output" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "fastqc" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/{wildcards.readgroup_name}/%j.{rule}.err"
    },
    "flagstat" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "bqsr_analyze_covariates" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "qualimap_bamqc" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "collect_metrics_on_vcf" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "bcftools_stats" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "bcftools_plot" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "filter_x_chrom" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/{wildcards.chrom}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/{wildcards.chrom}/%j.{rule}.err"
    },
    "phase_x_chrom" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/{wildcards.chrom}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/{wildcards.chrom}/%j.{rule}.err"
    },
    "concat_phased" :
    {
        "output" : ".logs/{rule}/{wildcards.ref}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.ref}/%j.{rule}.err"
    },
    "sv_delly" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "merge_delly_calls" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "sv_gridss" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "sv_lumpy" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
    "sv_manta" :
    {
        "output" : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.sample_name}/%j.{rule}.err"
    },
}
